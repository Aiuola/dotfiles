 " .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

"" -- Set section :) --
set scrolloff=8
set number
set relativenumber
set showmode
set showcmd
set smartcase
set incsearch
set hlsearch
set visualbell
set clipboard=unnamedplus
let mapleader = ' '

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
" -- Plugin section --
" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
" Always highlight copy (yank)
Plug 'machakann/vim-highlightedyank'
" File tree
Plug 'preservim/nerdtree'
" Replace a line with register
Plug 'vim-scripts/ReplaceWithRegister'
" Blazing-ly fast
Plug 'easymotion/vim-easymotion'

" -- Map section --
" Adding empty lines
nmap <leader><Enter> o<ESC>k
nmap <leader><S-Enter> O<ESC>j
" Adding empty lines and moving
nmap <Enter> o<ESC>
" huh... this doesn't work
nmap <S-Enter> O<ESC>
" Select everything in the current file
nmap <C-a> gg0vG$

" Line navigation
map <C-p> $
map <C-o> ^

" Switch tabs
map <C-l> <Action>(NextTab)
map <C-h> <Action>(PreviousTab)

" -- Map IDE Actions section --
" https://jb.gg/abva4t
"" Map reformat code on save
nmap <C-w> <Action>(ReformatCode)
" This is already mapped to quit window in nvChad
nmap <C-q> <Action>(CloseContent)
" Clear the clutter ;)
nmap <A-q> <Action>(CloseAllUnmodifiedEditors)

" Todo: this should be mapped to the file-system tree like in
" nvChad
"" map <leader>e <Action>()

" I really can't remember why this is here since the pv action exists
nmap <C-n> <Action>(SelectInProjectView)

" Execution
nmap <leader>d <Action>(Debug)
nmap <leader>r <Action>(Run)
nmap <leader>s <Action>(Stop)

"" Map \b to toggle the breakpoint on the current line
nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>cb <Action>(ToggleConditionalBreakpoint)

" Harpoon...
" Toggle bookmarks
nmap <C-e> <Action>(ToggleBookmark)

" Reload ideavim config
nmap <leader>rc <Action>(IdeaVim.ReloadVimRc.reload)

" live grep/ project search - Telescope
map <C-s> <Action>(FindInPath)

" newFile this creates a file in root so...?
nmap <leader>nf <Action>(NewFile)

" Lsp
" find project files via filename - Project Files
map <C-f> <Action>(GotoFile)
" Gd -> go to definition"
" Go to implementation q? -
nmap <leader>q <Action>(GotoImplementation)
" Map \g to quick implementation of the function
nmap \g <Action>(QuickImplementations)
nmap <A-r> <Action>(RenameElement)

" Toggle function docs
nmap <leader>do <Action>(ToggleRenderedDocPresentation)

" Consistent paste
nmap p <Action>(EditorPaste)
" Open markdown Preview
nmap <leader>md <Action>(Markdown.Layout.EditorAndPreview)

" Toolwindows
nmap <leader>ma <Action>(ActivateMavenToolWindow)
" open file tree (Project View)
nmap <leader>pv <Action>(SelectInProjectView)
" Select in...
nmap <leader>si <Action>(SelectIn)
nmap <leader>cl <Action>(CollapseAll)
" Go back/forward
nmap <C-z> <Action>(Back)
nmap <C-x> <Action>(Forward)

" Git status using fugitive... wait (Git Status)
nmap <leader>gs <Action>(ActivateCommitToolWindow)
" select in views for example in file tree
nmap <leader>si <Action>(SelectIn)
nmap <leader>gb <Action>(Annotate)

" Exit if you need too
nmap <leader>ext <Action>(VimPluginToggle)

" Visual mode mappings

" Search selected visual text (not in the default register)
" TODO: actually do it
xmap <leader>s y
