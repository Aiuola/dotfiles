" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


"" -- Set section :) --
set scrolloff=10
set number
set relativenumber
set showmode
set showcmd
set smartcase
set incsearch
set hlsearch
set visualbell
set clipboard=unnamed
let mapleader = ' '

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
" -- Plugin section --
" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
" Always highlight copy (yank)
Plug 'machakann/vim-highlightedyank'
" File tree
Plug 'preservim/nerdtree'
" Replace a line with register
Plug 'vim-scripts/ReplaceWithRegister'
" Blazing-ly fast
Plug 'easymotion/vim-easymotion'

" -- Map section --
" Don't use Ex mode, use Q for formatting.
map Q gq

" Adding empty line
map <leader><Enter> o<ESC>k
map <leader><S-Enter> O<ESC>j
" Adding empty lines and moving
map <Enter> o<ESC>
map <S-Enter> O<ESC>
" Select everything on the current file
map <C-a> gg0vG$

" Line navigation
map <C-m> $
map <C-n> ^

" -- Map IDE Actions section --
" https://jb.gg/abva4t
"" Map \r to the Reformat Code action
map \r <Action>(ReformatCode)

" Execution
map <leader>d <Action>(Debug)
map <leader>r <Action>(Run)
map <leader>s <Action>(Stop)

"" Map \b to toggle the breakpoint on the current line
map <leader>b <Action>(ToggleLineBreakpoint)
map <leader>cb <Action>(ToggleConditionalBreakpoint)

" Harpoon...
" Toggle bookmarks
map <C-e> <Action>(ToggleBookmark)

" Reload ideavim config
map <leader>rc <Action>(IdeaVim.ReloadVimRc.reload)

" project search for a file via contents - Project Search
map <leader>ps <Action>(FindInPath)

" newFile this creates a file in root so...?
map <leader>nf <Action>(NewFile)

" Lsp
" find project files via filename - Project Files
map <leader>pf <Action>(GotoFile)
" Gd -> go to definition"
" Go to implementation q? -
map <leader>q <Action>(GotoImplementation)
" Map \g to quick implementation of the function
map \g <Action>(QuickImplementations)

" Toggle function docs
map <leader>do <Action>(ToggleRenderedDocPresentation)

" Consistent paste
map p <Action>(EditorPaste)
" Open markdown Preview
map <leader>md <Action>(Markdown.Layout.EditorAndPreview)

" Toolwindows
map <leader>ma <Action>(ActivateMavenToolWindow)
" open file tree (Project View)
map <leader>pv <Action>(SelectInProjectView)
" Select in...
map <leader>si <Action>(SelectIn)
map <leader>cl <Action>(CollapseAll)
map <C-z> <Action>(Back)
map <C-x> <Action>(Forward)

" Git status using fugitive... wait (Git Status)
map <leader>gs <Action>(ActivateCommitToolWindow)
" select in views for example in file tree
map <leader>si <Action>(SelectIn)

" Exit if you need too
map <leader>ext <Action>(VimPluginToggle)
